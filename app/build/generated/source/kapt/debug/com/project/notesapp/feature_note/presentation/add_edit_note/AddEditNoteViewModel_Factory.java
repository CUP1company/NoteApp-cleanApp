// Generated by Dagger (https://dagger.dev).
package com.project.notesapp.feature_note.presentation.add_edit_note;

import androidx.lifecycle.SavedStateHandle;
import com.project.notesapp.feature_note.domain.use_case.NoteUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddEditNoteViewModel_Factory implements Factory<AddEditNoteViewModel> {
  private final Provider<NoteUseCases> noteUseCasesProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public AddEditNoteViewModel_Factory(Provider<NoteUseCases> noteUseCasesProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.noteUseCasesProvider = noteUseCasesProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public AddEditNoteViewModel get() {
    return newInstance(noteUseCasesProvider.get(), savedStateHandleProvider.get());
  }

  public static AddEditNoteViewModel_Factory create(Provider<NoteUseCases> noteUseCasesProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new AddEditNoteViewModel_Factory(noteUseCasesProvider, savedStateHandleProvider);
  }

  public static AddEditNoteViewModel newInstance(NoteUseCases noteUseCases,
      SavedStateHandle savedStateHandle) {
    return new AddEditNoteViewModel(noteUseCases, savedStateHandle);
  }
}
